<%@ Page Title="About Me" Language="C#" MasterPageFile="~/Site.Master" AutoEventWireup="true" CodeBehind="About.aspx.cs" Inherits="ePortfolio.About" %>

<asp:Content ID="BodyContent" ContentPlaceHolderID="MainContent" runat="server">
    <h1><%: Title %></h1>
    <p>
        <asp:Image ID="Image1" runat="server" Height="337px" ImageAlign="Left" ImageUrl="~/Resources/IMG_20170703_155618.jpg" Width="259px" style="margin-left: 30px; margin-right: 30px;" />
        I&#39;ve always had a passion for computers, but it wasn&#39;t until coming to college that I was really able to say why. The more I studied programming languages, first at high levels with C++ where I learned how powerful pointers can be, then at assembly levels where I could fully appreciate the context of such a language as C++ and its use of processor-level functions, the more I realized the full extent of the programmer&#39;s domain. As I expanded past the object-oriented languages I was comfortable with into procedural and markup languages, I came to realize that the wide variety of programming languages wasn&#39;t just a matter of preference; rather, each new language brings with it a set of tools and optimizations for a specific set of applications, so that knowing more languages doesn&#39;t just make you more flexible, it gives you more potential.</p>
    <p>
        With all of this, I began to see computer science and software engineering in a new light. In my mind, all forms of engineering are about creation. The engineer envisions a completed product, and applies the tools of his or her discipline to see that product completed. For mechanical engineers, it might be a fuel-efficient car; for civil engineers, it may be a water tower; for electrical engineers, it may be the wiring for an entertainment system. But in each of these fields, the creative aspect is bounded by certain restrictions. All engineers are bound by the rules of physics; certain structures and circuitry just isn&#39;t possible due to the fundamental laws of nature. Mechanical and civil engineers have to pay attention to available resources and costs, as well as building codes and other legal obstacles. Although these engineers can dream up amazing, revolutionary technologies and structures, they have to work around these restrictions.</p>
    <p>
        For software engineers, though, this all goes out the window. Although we must still practice responsible memory management and optimized algorithm creation, the fact that all of our creations are in the digital world releases us from the chains of physics, materials scarcity, and funding. Yes, we still can&#39;t use more drive space than we have room for, and yes, our processors can only handle a finite amount of operations per second, but as technology increases in power exponentially, a la Moore&#39;s Law, and as more programming languages are created, the bounds of our abilities stretch seemingly to infinity. Software engineering is the perfect form of engineering. If you can dream it, you can make it; your imagination is the only bound.</p>
    
</asp:Content>
